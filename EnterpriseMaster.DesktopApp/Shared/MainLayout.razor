@using BlazorBootstrap
@using EnterpriseMaster.DbServices.Models.Database;
@using EnterpriseMaster.DesktopApp.Data.Models;
@using EnterpriseMaster.DesktopApp.Data.Services.LoginService;
@using EnterpriseMaster.DesktopApp.Data.Services.MainLayout;
@using EnterpriseMaster.DesktopApp.Helpers.Enums;
@inherits LayoutComponentBase
@inject MainLayoutService mainLayoutService;
@inject LoginService loginService
<link href="css/global.css" rel="stylesheet" />
@if(Config.IsLoggedIn != true)
{
    <div class="divLogin">
        <section class="section1">
            <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span>

            <div class="signin1">

                <div class="content1">
                    <div class="loginLogo">
                        @if (mainPagesModel.Logo != null)
                        {
                            <img class="basic-subscription-img" src="data:image;base64,@Convert.ToBase64String(mainPagesModel.Logo)" alt="Sales">
                        }
                    </div>

                    <div class="form1">

                        <div class="inputBox">

                            <input type="text" @bind="email" required> <i>Username</i>

                        </div>

                        <div class="inputBox">

                            <input type="password" @bind="password" required> <i>Password</i>

                        </div>

                        <div class="links1">
                            <a href="#">Forgot Password</a> <a style="color:#7012b3;" href="#">SignUp</a>

                        </div>

                        <div class="inputBoxButton">

                            <button class="button-71" type="submit" value="Login" @onclick="LoginClicked">Login</button>

                        </div>

                    </div>

                </div>

            </div>

        </section>

    </div>
}
else
{
    <div class="sidebar @sidebarClass">
        <div class="logo-details">
            <i style="color:#7012b3;">EM</i>
            <span class="logo_name">
                @if (mainPagesModel.Logo != null)
                {
                    <img class="basic-subscription-imgage" src="data:image;base64,@Convert.ToBase64String(mainPagesModel.Logo)" alt="Sales">
                }
            </span>
        </div>
        <ul class="nav-links">
            <li>
                <a href="/">
                    <i><iconify-icon icon="material-symbols:dashboard-outline" rotate="180deg"></iconify-icon></i>
                    <span class="link_name">Dashboard</span>
                </a>
                <ul class="sub-menu blank">
                    <li><a class="link_name" href="#">Dashboard</a></li>
                </ul>
            </li>
            @if (Config.UserRoles.Contains((int)StatusForRoles.PurchaseOrders) && Config.SubscriptionId == 1 || Config.SubscriptionId == 2 || Config.SubscriptionId == 3)
            {
                <li>
                    <a href="/orders">
                        <i><iconify-icon icon="material-symbols:draft-orders-outline"></iconify-icon></i>
                        <span class="link_name">Purchase Orders</span>
                    </a>
                    <ul class="sub-menu blank">
                        <li><a class="link_name" href="#">Purchase Orders</a></li>
                    </ul>
                </li>
            }
            @if (Config.UserRoles.Contains((int)StatusForRoles.Finance) && Config.SubscriptionId == 2)
            {
                <li>
                    <a href="/finance">
                        <i><iconify-icon icon="streamline:shopping-jewelry-diamond-2-diamond-money-payment-finance-wealth"></iconify-icon></i>
                        <span class="link_name">Finance</span>
                    </a>
                    <ul class="sub-menu blank">
                        <li><a class="link_name" href="#">Finance</a></li>
                    </ul>
                </li>
            }
            @if (Config.UserRoles.Contains((int)StatusForRoles.CreateOffers) && Config.SubscriptionId == 1 || Config.SubscriptionId == 2 || Config.SubscriptionId == 3)
            {
                <li>
                    <a href="/offers">
                        <i><iconify-icon icon="mdi:offer"></iconify-icon></i>
                        <span class="link_name">Create Offers</span>
                    </a>
                    <ul class="sub-menu blank">
                        <li><a class="link_name" href="#">Create Offers</a></li>
                    </ul>
                </li> 
            }
            @if (Config.UserRoles.Contains((int)StatusForRoles.Inventory) && Config.SubscriptionId == 1 || Config.SubscriptionId == 2 || Config.SubscriptionId == 3)
            {
                <li>
                    <a href="/inventory">
                        <i><iconify-icon icon="fluent-mdl2:product-variant"></iconify-icon></i>
                        <span class="link_name">Inventory</span>
                    </a>
                    <ul class="sub-menu blank">
                        <li><a class="link_name" href="#">Inventory</a></li>
                    </ul>
                </li>
            }
            @if (Config.UserRoles.Contains((int)StatusForRoles.Invoices) && Config.SubscriptionId == 1 || Config.SubscriptionId == 2 || Config.SubscriptionId == 3)
            {
                <li>
                    <a href="/invoices">
                        <i><iconify-icon icon="iconamoon:invoice"></iconify-icon></i>
                        <span class="link_name">Invoices</span>
                    </a>
                    <ul class="sub-menu blank">
                        <li><a class="link_name" href="#">Invoices</a></li>
                    </ul>
                </li>
            }
            @if (Config.UserRoles.Contains((int)StatusForRoles.SalesOrders) && Config.SubscriptionId == 1 || Config.SubscriptionId == 2 || Config.SubscriptionId == 3)
            {
                <li>
                    <a href="/sales">
                        <i><iconify-icon icon="icon-park-outline:sales-report"></iconify-icon></i>
                        <span class="link_name">Sales Orders</span>
                    </a>
                    <ul class="sub-menu blank">
                        <li><a class="link_name" href="#">Sales Orders</a></li>
                    </ul>
                </li>
            }
            @if (Config.UserRoles.Contains((int)StatusForRoles.Analytics) && Config.SubscriptionId == 2)
            {
                <li>
                    <a href="/analytics">
                        <i><iconify-icon icon="grommet-icons:analytics"></iconify-icon></i>
                        <span class="link_name">Analytics</span>
                    </a>
                    <ul class="sub-menu blank">
                        <li><a class="link_name" href="#">Analytics</a></li>
                    </ul>
                </li>
            }
            @if (Config.UserRoles.Contains((int)StatusForRoles.HumanResources) && Config.SubscriptionId == 2)
            {
                <li>
                    <a href="/hr">
                        <i><iconify-icon icon="grommet-icons:resources"></iconify-icon></i>
                        <span class="link_name">Human Resources</span>
                    </a>
                    <ul class="sub-menu blank">
                        <li><a class="link_name" href="#">Human Resources</a></li>
                    </ul>
                </li>
            }
            @if (Config.UserRoles.Contains((int)StatusForRoles.Production) && Config.SubscriptionId == 2)
            {
                <li>
                    <a href="/production">
                        <i><iconify-icon icon="streamline:money-graph-bar-increase-up-product-performance-increase-arrow-graph-business-chart"></iconify-icon></i>
                        <span class="link_name">Production</span>
                    </a>
                    <ul class="sub-menu blank">
                        <li><a class="link_name" href="#">Production</a></li>
                    </ul>
                </li>
            }
            @if (Config.UserRoles.Contains((int)StatusForRoles.Accounting) && Config.SubscriptionId == 2 || Config.SubscriptionId == 3)
            {
                <li>
                    <a href="/accounting">
                        <i><iconify-icon icon="material-symbols:account-tree-outline"></iconify-icon></i>
                        <span class="link_name">Accounting</span>
                    </a>
                    <ul class="sub-menu blank">
                        <li><a class="link_name" href="#">Accounting</a></li>
                    </ul>
                </li>
            }
            @if (Config.UserRoles.Contains((int)StatusForRoles.CustomerData) && Config.SubscriptionId == 2 || Config.SubscriptionId == 3)
            {
                <li>
                    <a href="/customerdata">
                        <i><iconify-icon icon="carbon:user-data"></iconify-icon></i>
                        <span class="link_name">Customer Data</span>
                    </a>
                    <ul class="sub-menu blank">
                        <li><a class="link_name" href="#">Customer Data</a></li>
                    </ul>
                </li>
            }
            <li>
                <div class="profile-details">
                    <div class="profile-content">
                        @if (mainPagesModel.UserImage != null)
                        {
                            <img src="data:image;base64,@Convert.ToBase64String(mainPagesModel.UserImage)">
                        }
                    </div>
                    <div class="name-job">
                        <div class="profile_name">@Config.FirstName @Config.LastName</div>
                        <div class="job">@Config.Position</div>
                    </div>
                    <i class='bx bx-log-out' style="margin-right:15px;" @onclick="Logout"></i>
                </div>
            </li>
        </ul>
    </div>
    <section class="home-section">
        <div class="home-content">
            <i class='bx bx-menu' @onclick="ToggleSidebar"></i>
            <div class="spacer"></div>
            <i class='bx bx-log-out' @onclick="Logout" style="font-size:26px; color:white; cursor: pointer;"></i>
            <h2 class="companyName">@Config.Company</h2>
        </div>
        <div style="margin: 10px;">
            @Body
        </div>
    </section>
}
<Preload />
<Toasts class="p-3" Messages="messages" AutoHide="true" Delay="6000" Placement="ToastsPlacement.TopRight" />
@code {
    private string email = "kjszywala@protonmail.com";
    private string password = "Lenioslaw161502";
    //private string email = "shean@gmail.com";
    //private string password = "Mark161502";
    private bool isSidebarClosed = true;
    private string sidebarClass => isSidebarClosed ? "close" : "";

    private List<ArrowInfo> arrows = new List<ArrowInfo>();
    private MainPageViewModel? mainPagesModel { get; set; } = new MainPageViewModel();

    [Inject] protected PreloadService preloadService { get; set; }

    private class ArrowInfo
    {
        public string Text { get; set; }
        public bool IsMenuVisible { get; set; }
    }

    private void ToggleSidebar()
    {
        isSidebarClosed = !isSidebarClosed;
    }

    private void ToggleArrow(ArrowInfo arrow)
    {
        arrow.IsMenuVisible = !arrow.IsMenuVisible;
    }

    private async Task LoginClicked()
    {
        try
        {
            preloadService.Show(SpinnerColor.Dark);
            Config.IsLoggedIn = await loginService.AuthenticateAsync(email, password);
            await Task.Delay(2000);
            if (!Config.IsLoggedIn)
            {
                ShowMessage(ToastType.Danger, "Incorrect Details!", "Wrong login or password. Please try again");
            }
            else
            {
                ShowMessage(ToastType.Success, "Details Correct!", "Welcome to Enterprise Master! You have successfully logged in");
            }
            preloadService.Hide();
        }
        catch (Exception e)
        {
            ShowMessage(ToastType.Danger, "Upsss!", $"{e.Message}");
            preloadService.Hide();
        }
    }

    private async Task Logout()
    {
        preloadService.Show(SpinnerColor.Dark);
        loginService.Logout();
        if (!Config.IsLoggedIn)
        {
            ShowMessage(ToastType.Success, "Success!", "You have successfully logged out");
        }
        else
        {
            ShowMessage(ToastType.Danger, "Warning!", "Something went wrong while logging out.");
        }
        preloadService.Hide();
    }

    protected override async void OnInitialized()
    {
        preloadService.Show(SpinnerColor.Dark);
        mainPagesModel = await mainLayoutService.GetMainPagesModel();
        StateHasChanged();
        // Initialize arrows list here
        arrows.Add(new ArrowInfo { Text = "Dashboard", IsMenuVisible = false });
        arrows.Add(new ArrowInfo { Text = "Category", IsMenuVisible = false });
        arrows.Add(new ArrowInfo { Text = "Posts", IsMenuVisible = false });
        arrows.Add(new ArrowInfo { Text = "Analytics", IsMenuVisible = false });
        arrows.Add(new ArrowInfo { Text = "Chart", IsMenuVisible = false });
        arrows.Add(new ArrowInfo { Text = "Plugins", IsMenuVisible = false });
        arrows.Add(new ArrowInfo { Text = "Explore", IsMenuVisible = false });
        arrows.Add(new ArrowInfo { Text = "History", IsMenuVisible = false });
        arrows.Add(new ArrowInfo { Text = "Setting", IsMenuVisible = false });
        preloadService.Hide();
    }

    #region Toast

    public List<ToastMessage> messages = new List<ToastMessage>();

    public void ShowMessage(ToastType toastType, string title, string message) 
        => messages.Add(CreateMessage(
            toastType, 
            title, 
            message));

    private ToastMessage CreateMessage(ToastType toastType, string title, string message)
        => new ToastMessage
            {
                Type = toastType,
                Title = title,
                HelpText = $"{DateTime.Now}",
                Message = $"{message}: {DateTime.Now}",
            };

    #endregion
}
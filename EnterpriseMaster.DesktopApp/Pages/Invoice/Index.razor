@page "/invoices"
@using BlazorBootstrap
@using EnterpriseMaster.DbServices.Models.Database;
@using EnterpriseMaster.DesktopApp.Data.Services.InvoiceServices;
@inherits MainLayout
@inject InvoicesMenuService invoiceService

<Tabs EnableFadeEffect="true">
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Diagram3" /> Invoices
        </TitleTemplate>
        <Content>
            <br />
            <Grid TItem="Invoices"
                  @ref="gridInvoices"
                  AllowFiltering="true"
                  AllowPaging="true"
                  AllowSorting="true"
                  AllowRowClick="true"
                  DataProvider="InvoicesDataProvider"
                  Class="table table-hover table-bordered table-striped"
                  FiltersRowCssClass="bg-dark text-white bg-opacity-25 border-bottom-0"
                  HeaderRowCssClass="bg-dark text-white border-bottom-0"
                  PageSize="5"
                  PageSizeSelectorVisible="true"
                  PageSizeSelectorItems="@(new int[] { 5,10,20 })"
                  PaginationItemsTextFormat="{0} - {1} of {2} pages"
                  ItemsPerPageText="Items per page"
                  Responsive="true">
                <GridColumn TItem="Invoices" HeaderText="CustomerInformation.Email" PropertyName="CustomerInformation.Email">
                    @context.CustomerInformation.Email
                </GridColumn>
                <GridColumn TItem="Invoices" HeaderText="Product Name" PropertyName="ProductName">
                    @context.SalesOrder.Product.ProductName
                </GridColumn>
                <GridColumn TItem="Invoices" HeaderText="Product Code" PropertyName="ProductCode">
                    @context.SalesOrder.Product.ProductCode
                </GridColumn>
                <GridColumn TItem="Invoices" HeaderText="Quantity" PropertyName="Quantity">
                    @context.SalesOrder.Quantity
                </GridColumn>
                <GridColumn TItem="Invoices" HeaderText="Total Amount" PropertyName="TotalAmount">
                    @context.TotalAmount
                </GridColumn>
                <GridColumn TItem="Invoices" HeaderText="Discount" PropertyName="Discount">
                    @context.SalesOrder.Discount
                </GridColumn>
                <GridColumn TItem="Invoices" HeaderText="Order Date" PropertyName="OrderDate">
                    @context.SalesOrder.OrderDate
                </GridColumn>
            </Grid>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Braces" /> Invoice Generation
        </TitleTemplate>
        <Content>
            <p class="mt-2">
                <b>This is some placeholder content the Contact tab's associated content.</b> Clicking another tab will toggle the visibility of this one for the next.
            </p>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Diagram2" /> Automated Invoicing
        </TitleTemplate>
        <Content>
            <p class="mt-2">
                <b>This is some placeholder content the Contact tab's associated content.</b> Clicking another tab will toggle the visibility of this one for the next.
            </p>
        </Content>
    </Tab>
</Tabs>

@code {
    protected async override void OnInitialized()
    {
        invoices = await invoiceService.GetAllInvoicesAsync();

        await gridInvoices.RefreshDataAsync();
    }

    #region InvoicesRegion

    private List<Invoices> invoices = new List<Invoices>();
    private Grid<Invoices> gridInvoices;
    private async Task<GridDataProviderResult<Invoices>> InvoicesDataProvider(GridDataProviderRequest<Invoices> request)
    {
        if (invoices is null)
            invoices = await invoiceService.GetAllInvoicesAsync();

        return await Task.FromResult(request.ApplyTo(invoices));
    }

    #endregion
}

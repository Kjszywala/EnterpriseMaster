@page "/orders"
@using BlazorBootstrap
@using EnterpriseMaster.DbServices.Models.Database;
@using EnterpriseMaster.DesktopApp.Data.Models;
@using EnterpriseMaster.DesktopApp.Data.Services.OrdersServices;
@inherits MainLayout
@inject OrderService orderService

<Tabs EnableFadeEffect="true">
    <Tab IsActive="true">
        <TitleTemplate>
            <Icon Name="IconName.BorderAll" /> Purchase Orders
        </TitleTemplate>
        <Content>
            <br />
            <Grid TItem="OrderViewModel"
                  @ref="gridOrderViewModel"
                  AllowFiltering="true"
                  AllowPaging="true"
                  AllowSorting="true"
                  AllowRowClick="true"
                  DataProvider="OrderViewModelDataProvider"
                  Class="table table-hover table-bordered table-striped"
                  FiltersRowCssClass="bg-dark text-white bg-opacity-25 border-bottom-0"
                  HeaderRowCssClass="bg-dark text-white border-bottom-0"
                  PageSize="5"
                  PageSizeSelectorVisible="true"
                  PageSizeSelectorItems="@(new int[] { 5,10,20 })"
                  PaginationItemsTextFormat="{0} - {1} of {2} pages"
                  ItemsPerPageText="Items per page"
                  Responsive="true">
                <GridColumn TItem="OrderViewModel" HeaderText="Product Name" PropertyName="ProductName">
                    @context.ProductName
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Product Code" PropertyName="ProductCode">
                    @context.ProductCode
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Price Paid($)" PropertyName="PricePaid">
                    @context.PricePaid
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Order Number" PropertyName="OrderNumber">
                    @context.OrderNumber
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Payment Term" PropertyName="PaymentTerm">
                    @context.PaymentTerm
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Quantity" PropertyName="Quantity">
                    @context.Quantity
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Quantity Type" PropertyName="QuantityType">
                    @context.QuantityType
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Delivery Date" PropertyName="Deliverydate">
                    @context.Deliverydate
                </GridColumn>
            </Grid>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Kanban" /> Parts In Stock
        </TitleTemplate>
        <Content>
            <br />
            <Grid TItem="PartsViewModel"
                  @ref="gridPartsViewModel"
                  AllowFiltering="true"
                  AllowPaging="true"
                  AllowSorting="true"
                  AllowRowClick="true"
                  DataProvider="PartsViewModelDataProvider"
                  Class="table table-hover table-bordered table-striped"
                  FiltersRowCssClass="bg-dark text-white bg-opacity-25 border-bottom-0"
                  HeaderRowCssClass="bg-dark text-white border-bottom-0"
                  PageSize="5"
                  PageSizeSelectorVisible="true"
                  PageSizeSelectorItems="@(new int[] { 5,10,20 })"
                  PaginationItemsTextFormat="{0} - {1} of {2} pages"
                  ItemsPerPageText="Items per page"
                  Responsive="true">
                <GridColumn TItem="PartsViewModel" HeaderText="Product Name" PropertyName="ProductName">
                    @context.ProductName
                </GridColumn>
                <GridColumn TItem="PartsViewModel" HeaderText="Product Code" PropertyName="ProductCode">
                    @context.ProductCode
                </GridColumn>
                <GridColumn TItem="PartsViewModel" HeaderText="Description" PropertyName="Description">
                    @context.Description
                </GridColumn>
                <GridColumn TItem="PartsViewModel" HeaderText="Part Name" PropertyName="PartName">
                    @context.PartName
                </GridColumn>
                <GridColumn TItem="PartsViewModel" HeaderText="Quantity In Stock" PropertyName="QuantityInStock">
                    @context.QuantityInStock
                </GridColumn>
                <GridColumn TItem="PartsViewModel" HeaderText="Unit Cost" PropertyName="UnitCost">
                    @context.UnitCost
                </GridColumn>
            </Grid>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Kanban" /> Parts Orders
        </TitleTemplate>
        <Content>
            <br />
            <div class="container">
                <div class="left-panel">1</div>
                <div class="right-panel">
                    <div class="top-right">2</div>
                    <div class="bottom-right">3</div>
                </div>
            </div>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Kanban" /> Add Parts
        </TitleTemplate>
        <Content>
            <br />
            <div class="container">
                <div class="left-panel">1</div>
                <div class="right-panel">
                    <div class="top-right">2</div>
                    <div class="bottom-right">3</div>
                </div>
            </div>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Kanban" /> Edit Parts
        </TitleTemplate>
        <Content>
            <br />
            <div class="container">
                <div class="left-panel">1</div>
                <div class="right-panel">
                    <div class="top-right">2</div>
                    <div class="bottom-right">3</div>
                </div>
            </div>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Kanban" /> Order Management
        </TitleTemplate>
        <Content>
            <br />
            <div class="container">
                <div class="left-panel">1</div>
                <div class="right-panel">
                    <div class="top-right">2</div>
                    <div class="bottom-right">3</div>
                </div>
            </div>
        </Content>
    </Tab> 
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Flag" /> Order Reports
        </TitleTemplate>
        <Content>
            <br />
            <div class="container">
                <div class="left-panel">1</div>
                <div class="right-panel">
                    <div class="top-right">2</div>
                    <div class="bottom-right">3</div>
                </div>
            </div>
        </Content>
    </Tab>
</Tabs>

@code {

    protected async override void OnInitialized()
    {
        purchaseOrders = await orderService.GetAllPurchaseOrdersForGridAsync();

        await gridOrderViewModel.RefreshDataAsync();
    }

    #region OrderViewModel

    private List<OrderViewModel> purchaseOrders = new List<OrderViewModel>();
    private Grid<OrderViewModel> gridOrderViewModel;
    private async Task<GridDataProviderResult<OrderViewModel>> OrderViewModelDataProvider(GridDataProviderRequest<OrderViewModel> request)
    {
        if (purchaseOrders is null) 
            purchaseOrders = await orderService.GetAllPurchaseOrdersForGridAsync(); 

        return await Task.FromResult(request.ApplyTo(purchaseOrders));
    }

    #endregion

    #region Order Management

    private List<PartsViewModel> parts = new List<PartsViewModel>();
    private Grid<PartsViewModel> gridPartsViewModel;
    private async Task<GridDataProviderResult<PartsViewModel>> PartsViewModelDataProvider(GridDataProviderRequest<PartsViewModel> request)
    {
        if (parts is null)
            parts = await orderService.GetAllPartsForGridAsync();

        return await Task.FromResult(request.ApplyTo(parts));
    }

    #endregion

    #region Order Management
    #endregion

    #region Order Reports
    #endregion
}

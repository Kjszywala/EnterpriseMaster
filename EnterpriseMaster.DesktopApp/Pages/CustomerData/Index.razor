@page "/customerdata"
@using BlazorBootstrap
@using EnterpriseMaster.DbServices.Models.Database;
@using EnterpriseMaster.DesktopApp.Data.Models;
@using EnterpriseMaster.DesktopApp.Data.Services.CustomerDataServices;
@inherits MainLayout

@inject CustomerDataService customerService

<Tabs EnableFadeEffect="true">
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.PersonArmsUp" /> Customer Profiles
        </TitleTemplate>
        <Content>
            <br />
            <Grid TItem="CustomerDataViewModel"
                  @ref="gridCustomerDataViewModel"
                  AllowFiltering="true"
                  AllowPaging="true"
                  AllowSorting="true"
                  AllowRowClick="true"
                  DataProvider="CustomerDataViewModelDataProvider"
                  Class="table table-hover table-bordered table-striped"
                  FiltersRowCssClass="bg-dark text-white bg-opacity-25 border-bottom-0"
                  HeaderRowCssClass="bg-dark text-white border-bottom-0"
                  PageSize="5"
                  PageSizeSelectorVisible="true"
                  PageSizeSelectorItems="@(new int[] { 5,10,20 })"
                  PaginationItemsTextFormat="{0} - {1} of {2} pages"
                  ItemsPerPageText="Items per page"
                  Responsive="true">
                <GridColumn TItem="CustomerDataViewModel" HeaderText="First Name" PropertyName="FirstName" SortKeySelector="item => item.FirstName">
                    @context.FirstName
                </GridColumn>
                <GridColumn TItem="CustomerDataViewModel" HeaderText="Last Name" PropertyName="LastName" SortKeySelector="item => item.LastName">
                    @context.LastName
                </GridColumn>
                <GridColumn TItem="CustomerDataViewModel" HeaderText="Email" PropertyName="Email" SortKeySelector="item => item.Email">
                    @context.Email
                </GridColumn>
                <GridColumn TItem="CustomerDataViewModel" HeaderText="Phone" PropertyName="Phone" SortKeySelector="item => item.Phone">
                    @context.Phone
                </GridColumn>
                <GridColumn TItem="CustomerDataViewModel" HeaderText="Company Name" PropertyName="ComapnyName" SortKeySelector="item => item.ComapnyName">
                    @context.ComapnyName
                </GridColumn>
            </Grid>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.PersonUp" /> Customer Segmentation
        </TitleTemplate>
        <Content>
            <p class="mt-2">
                <b>This is some placeholder content the Contact tab's associated content.</b> Clicking another tab will toggle the visibility of this one for the next.
            </p>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Rss" /> Customer Feedback
        </TitleTemplate>
        <Content>
            <p class="mt-2">
                <b>This is some placeholder content the Contact tab's associated content.</b> Clicking another tab will toggle the visibility of this one for the next.
            </p>
        </Content>
    </Tab>
</Tabs>
@code {
    protected async override void OnInitialized()
    {
        customerInformation = await customerService.GetAllCustomerInformationForGridAsync();

        await gridCustomerDataViewModel.RefreshDataAsync();
    }

    #region CustomerDataViewModel

    private List<CustomerDataViewModel> customerInformation = new List<CustomerDataViewModel>();
    private Grid<CustomerDataViewModel> gridCustomerDataViewModel;
    private async Task<GridDataProviderResult<CustomerDataViewModel>> CustomerDataViewModelDataProvider(GridDataProviderRequest<CustomerDataViewModel> request)
    {
        if (customerInformation is null)
            customerInformation = await customerService.GetAllCustomerInformationForGridAsync();

        return await Task.FromResult(request.ApplyTo(customerInformation));
    }

    #endregion
}

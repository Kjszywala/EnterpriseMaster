@page "/"
@using BlazorBootstrap
@using EnterpriseMaster.DbServices.Models.Database;
@using EnterpriseMaster.DesktopApp.Data.Models;

<div class="dashboardGrid">
    <div class="dashboardBox1">
        <div class="dashbordContent">
            <div class="task-list">
                <div class="dashboardTitle">
                    <h3>Tasks List For Today</h3>
                </div>
                <hr class="dashboardHr" style="color:black;"/>
               <Grid TItem="Tasks"
                      AllowFiltering="true"
                      AllowPaging="true"
                      AllowSorting="true"
                      AllowRowClick="true"
                      Class="table table-hover table-bordered table-striped"
                      DataProvider="TasksDataProvider"
                      FiltersRowCssClass="bg-dark text-white bg-opacity-25 border-bottom-0"
                      HeaderRowCssClass="bg-dark text-white border-bottom-0"
                      PageSize="5"
                      PageSizeSelectorVisible="true"
                      PageSizeSelectorItems="@(new int[] { 5,10,20 })"
                      PaginationItemsTextFormat="{0} - {1} of {2} pages"
                      ItemsPerPageText="Items per page"
                      Responsive="true"
                      OnRowClick="OnShowModalClick">
                    <GridColumn TItem="Tasks" HeaderText="Id" PropertyName="Id" SortKeySelector="item => item.Id" FilterTextboxWidth="80">
                        @context.Id
                    </GridColumn>
                    <GridColumn TItem="Tasks" HeaderText="Description" PropertyName="Description" SortKeySelector="item => item.Description" SortString="Description">
                        @context.Description
                    </GridColumn>
                    <GridColumn TItem="Tasks" HeaderText="CreationDate" PropertyName="CreationDate" SortKeySelector="item => item.CreationDate" FilterTextboxWidth="40">
                        @context.CreationDate
                    </GridColumn>
                    <GridColumn TItem="Tasks" HeaderText="Actions" Filterable="false" TextAlignment="Alignment.Center" >
                        <Button Color="ButtonColor.Success" Outline="true" Size="Size.Small" style="margin:2px;">Complete</Button>
                        <Button Color="ButtonColor.Danger" Outline="true" Size="Size.Small" style="margin:2px;">Remove</Button>
                    </GridColumn>
                </Grid>
            </div>
        </div>
    </div>
    <div class="dashboardBox2">
        <div class="dashbordContent">
            <div class="dashboardTitle">
                <h3>Completed Tasks</h3>
            </div>
            <hr class="dashboardHr" style="color:black;" />
           
        </div>
    </div>
    <div class="dashboardBox3">
        <div class="dashbordContent">
            <div class="dashboardTitle">
                <h3>Reminder</h3>
            </div>
            <hr class="dashboardHr" style="color:black;" />
            3
        </div>
    </div>
    <div class="dashboardBox4">
        <div class="dashbordContent">
            <div class="dashboardTitle">
                <h3>What's new</h3>
            </div>
            <hr class="dashboardHr" style="color:black;" />
            4
        </div>
    </div>
</div>

<Modal @ref="modal" Title="@modalModel.Title" IsVerticallyCentered="true">
    <BodyTemplate>
        <div class="task-id">
            <span><strong>ID:</strong></span>
            <span>@modalModel.Id</span>
        </div>
        <div class="task-description">
            <span><strong>Description:</strong></span>
            <span>@modalModel.Description</span>
        </div>
        <div class="task-status">
            <span><strong>Status:</strong></span>
            <span>@modalModel.Status</span>
        </div>
        <div class="task-complete-by">
            <span><strong>Complete By:</strong></span>
            <span>@modalModel.CompleteBy.ToString("yyyy-MM-dd")</span>
        </div>
        <div class="task-creation-date">
            <span><strong>Creation Date:</strong></span>
            <span>@modalModel.CreationDate.ToString("yyyy-MM-dd")</span>
        </div>
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Success">Set As Complete</Button>
        <Button Color="ButtonColor.Danger" @onclick="OnHideModalClick">Remove</Button>
    </FooterTemplate>
</Modal>

@code {
    private IEnumerable<Tasks> tasks;

    protected override void OnInitialized()
    {
        tasks = new List<Tasks>
        {
            new Tasks { Id = 107,   Description = "AI Engineer", CreationDate = DateTime.Now, IsActive = true },
            new Tasks { Id = 103,   Description = "Senior DevOps Engineer", CreationDate = DateTime.Now, IsActive = true },
            new Tasks { Id = 106, Description = "Data Engineer", CreationDate = DateTime.Now, IsActive = true },
            new Tasks { Id = 104,   Description = "Associate Architect", CreationDate = DateTime.Now, IsActive = false },
            new Tasks { Id = 105,   Description = "Senior Data Engineer", CreationDate = DateTime.Now, IsActive = true },
            new Tasks { Id = 102,   Description = "Architect", CreationDate = DateTime.Now, IsActive = true },
            new Tasks { Id = 101,  Description = "Architect", CreationDate = DateTime.Now, IsActive = true },
            new Tasks { Id = 108, Description = "Data Analyst", CreationDate = DateTime.Now, IsActive = true },
            new Tasks { Id = 109,  Description = "App Maker", CreationDate = DateTime.Now, IsActive = true },
        };
    }

    private async Task<GridDataProviderResult<Tasks>> TasksDataProvider(GridDataProviderRequest<Tasks> request)
    {
        return await Task.FromResult(request.ApplyTo(tasks));
    }

    //Modal window
    private Modal modal;
    private ModalModel modalModel = new ModalModel();
    private string title = "Test Case";

    private async Task OnShowModalClick()
    {
        modalModel = new ModalModel()
        {
            Id = 1,
            Title = "Example Task",
            Description = "This is an example task.",
            Status = "In Progress",
            CompleteBy = DateTime.Now.Add(TimeSpan.FromDays(7)),
            CreationDate = DateTime.Now.Add(TimeSpan.FromDays(-7))
        };
        await modal?.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await modal?.HideAsync();
    }
}

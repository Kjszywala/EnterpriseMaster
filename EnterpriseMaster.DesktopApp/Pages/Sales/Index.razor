@page "/sales"
@using BlazorBootstrap
@using EnterpriseMaster.DbServices.Models.Database;
@using EnterpriseMaster.DesktopApp.Data.Models;
@using EnterpriseMaster.DesktopApp.Data.Services.OrdersServices;
@using EnterpriseMaster.DesktopApp.Data.Services.SalesServices;
@inherits MainLayout
@inject SalesService orderService

<Tabs EnableFadeEffect="true">
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Border" /> Sales Orders
        </TitleTemplate>
        <Content>
            <br />
            <Grid TItem="OrderViewModel"
                  @ref="gridOrderViewModel"
                  AllowFiltering="true"
                  AllowPaging="true"
                  AllowSorting="true"
                  AllowRowClick="true"
                  DataProvider="OrderViewModelDataProvider"
                  Class="table table-hover table-bordered table-striped"
                  FiltersRowCssClass="bg-dark text-white bg-opacity-25 border-bottom-0"
                  HeaderRowCssClass="bg-dark text-white border-bottom-0"
                  PageSize="5"
                  PageSizeSelectorVisible="true"
                  PageSizeSelectorItems="@(new int[] { 5,10,20 })"
                  PaginationItemsTextFormat="{0} - {1} of {2} pages"
                  ItemsPerPageText="Items per page"
                  Responsive="true">
                <GridColumn TItem="OrderViewModel" HeaderText="Product Name" PropertyName="ProductName" SortKeySelector="item => item.ProductName">
                    @context.ProductName
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Product Code" PropertyName="ProductCode" SortKeySelector="item => item.ProductCode">
                    @context.ProductCode
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Price Paid($)" PropertyName="PricePaid" SortKeySelector="item => item.PricePaid">
                    @context.PricePaid
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Order Number" PropertyName="OrderNumber" SortKeySelector="item => item.OrderNumber">
                    @context.OrderNumber
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Payment Term" PropertyName="PaymentTerm" SortKeySelector="item => item.PaymentTerm">
                    @context.PaymentTerm
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Quantity" PropertyName="Quantity" SortKeySelector="item => item.Quantity">
                    @context.Quantity
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Quantity Type" PropertyName="QuantityType" SortKeySelector="item => item.QuantityType">
                    @context.QuantityType
                </GridColumn>
                <GridColumn TItem="OrderViewModel" HeaderText="Order Status" PropertyName="OrderStatus" SortKeySelector="item => item.OrderStatus">
                    @context.OrderStatus
                </GridColumn>
            </Grid>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Braces" /> Returns and Refunds
        </TitleTemplate>
        <Content>
            <p class="mt-2">
                <b>This is some placeholder content the Contact tab's associated content.</b> Clicking another tab will toggle the visibility of this one for the next.
            </p>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Diagram2" /> Customer Management
        </TitleTemplate>
        <Content>
            <p class="mt-2">
                <b>This is some placeholder content the Contact tab's associated content.</b> Clicking another tab will toggle the visibility of this one for the next.
            </p>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Diagram2" /> Shippers Management
        </TitleTemplate>
        <Content>
            <br />
            <div class="container">
                <div class="left-panel">1</div>
                <div class="right-panel">
                    <div class="top-right">2</div>
                    <div class="bottom-right">3</div>
                </div>
            </div>
        </Content>
    </Tab>
</Tabs>

@code {
    protected async override void OnInitialized()
    {
        salesOrders = await orderService.GetAllSalesOrdersForGridAsync();

        await gridOrderViewModel.RefreshDataAsync();
    }

    #region OrderViewModel

    private List<OrderViewModel> salesOrders = new List<OrderViewModel>();
    private Grid<OrderViewModel> gridOrderViewModel;
    private async Task<GridDataProviderResult<OrderViewModel>> OrderViewModelDataProvider(GridDataProviderRequest<OrderViewModel> request)
    {
        if (salesOrders is null)
            salesOrders = await orderService.GetAllSalesOrdersForGridAsync();

        return await Task.FromResult(request.ApplyTo(salesOrders));
    }

    #endregion
}